[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://scem582jm67t"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_knada"]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_0ccye"]
parameter_name = "Texture2DParameter"
texture_repeat = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_j1pab"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_xm0bw"]
default_input_values = [1, Vector2(1, 1), 2, Vector2(0.04, 0)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ansfm"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_dhu5l"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(2, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_tm58u"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_80ooo"]
parameter_name = "FloatParameter"
hint = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_u2atq"]
expanded_output_ports = [0]
input_name = "color"

[resource]
code = "shader_type canvas_item;
render_mode blend_add;

uniform float FloatParameter : hint_range(0, 1);
uniform sampler2D Texture2DParameter : repeat_enable;



void fragment() {
// FloatParameter:8
	float n_out8p0 = FloatParameter;


// Input:5
	float n_out5p0 = TIME;


// VectorOp:6
	vec2 n_in6p1 = vec2(2.00000, 0.00000);
	vec2 n_out6p0 = vec2(n_out5p0) * n_in6p1;


// UVFunc:4
	vec2 n_in4p1 = vec2(1.00000, 1.00000);
	vec2 n_out4p0 = n_out6p0 * n_in4p1 + UV;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Texture2DParameter, n_out4p0);
	float n_out3p1 = n_out3p0.r;


// SmoothStep:7
	float n_in7p1 = 1.00000;
	float n_out7p0 = smoothstep(n_out8p0, n_in7p1, n_out3p1);


// Input:9
	vec4 n_out9p0 = COLOR;


// VectorOp:10
	vec3 n_out10p0 = vec3(n_out7p0) * vec3(n_out9p0.xyz);


// Output:0
	COLOR.rgb = n_out10p0;


}
"
graph_offset = Vector2(-343.486, -169.307)
mode = 1
modes/blend = 1
flags/light_only = false
nodes/vertex/0/position = Vector2(900, 80)
nodes/fragment/0/position = Vector2(2660, -20)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_0ccye")
nodes/fragment/2/position = Vector2(440, 240)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_j1pab")
nodes/fragment/3/position = Vector2(800, 40)
nodes/fragment/4/node = SubResource("VisualShaderNodeUVFunc_xm0bw")
nodes/fragment/4/position = Vector2(260, -40)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_ansfm")
nodes/fragment/5/position = Vector2(-340, -20)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorOp_dhu5l")
nodes/fragment/6/position = Vector2(0, 0)
nodes/fragment/7/node = SubResource("VisualShaderNodeSmoothStep_tm58u")
nodes/fragment/7/position = Vector2(1580, 160)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatParameter_80ooo")
nodes/fragment/8/position = Vector2(1040, -120)
nodes/fragment/9/node = SubResource("VisualShaderNodeInput_u2atq")
nodes/fragment/9/position = Vector2(1440, -180)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorOp_knada")
nodes/fragment/10/position = Vector2(2000, 0)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 4, 0, 3, 0, 5, 0, 6, 0, 6, 0, 4, 2, 3, 1, 7, 2, 8, 0, 7, 0, 7, 0, 10, 0, 9, 0, 10, 1, 10, 0, 0, 0)
